spring:

  flyway:
    enabled: false

#  config:
#    import: classpath:../../main/resources/security/application-s3.yml
  mail:
    host: smtp.example.com
    port: 587
    username: test@example.com
    password: example_password
    default-encoding: UTF-8
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:test;MODE=MySQL;DB_CLOSE_DELAY=-1;DATABASE_TO_UPPER=false;
    username: sa
    password:

  jpa:
    database: h2
    generate-ddl: false
    open-in-view: false
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
  data:
    web:
      pageable:
        one-indexed-parameters:
          true
    redis:
      host: localhost
      port: 6370
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: dummy-google-client-id
            client-secret: dummy-google-client-secret
            scope:
              - profile
              - email

          naver:
            client-id: dummy-naver-client-id
            client-secret: dummy-naver-client-secret
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            scope:
              - name
              - email
              - profile_image
            client-name: Naver

          kakao:
            client-id: dummy-kakao-client-id
            client-secret: dummy-kakao-client-secret
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope:
              - profile_nickname
              - profile_image
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            client-name: Kakao

          github:
            client-id: dummy-github-client-id
            client-secret: dummy-github-client-secret
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-info-authentication-method: header
            user-name-attribute: response

          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-info-authentication-method: header
            user-name-attribute: id

  cloud:
    aws:
      credentials:
        access-key: dummy-aws-access-key
        secret-key: dummy-aws-secret-key

      region:
        static: dummy-region

      s3:
        bucket: dummy-bucket
        default-image-url: https://dummy-bucket.s3.dummy-region.amazonaws.com/profile/default_profile.png

logging:
  level:
    org.hibernate.SQL: debug
    org.hibernate.type.descriptor.sql: trace
jwt:
  secret-key: 01234567890123456789012345678901
  access-token-expire-in: 1800
  refresh-token-expire-in: 1209600



cloud:
  aws:
    credentials:
      access-key: dummy-aws-access-key
      secret-key: dummy-aws-secret-key

    region:
      static: ap-northeast-2

    s3:
      bucket: kumoh-talk-bucket
      default-image-url: https://kumoh-talk-bucket.s3.ap-northeast-2.amazonaws.com/profile/default_profile.png


discord:
  webhook:
    url:
      report: https://discord.com/api/webhooks/dummy-report-webhook
      newsletter: https://discord.com/api/webhooks/dummy-newsletter-webhook